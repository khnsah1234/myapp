{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SSK\\\\Desktop\\\\boot\\\\myapp\\\\src\\\\comp\\\\home\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState } from \"react\";\nimport WeatherCard from \"./../weatherCard\";\nimport { Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet Home = () => {\n  _s();\n  const [cityName, setCityName] = useState(\"\");\n  const [data, setData] = useState([]);\n  let submitHandler = async e => {\n    e.preventDefault();\n    console.log(\"I am submit handler function\");\n    try {\n      let response = await axios.get(`https://pro.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=9030900440d65b7988587a3e425672a9&units=metric`);\n      console.log(\"response: \", response);\n      if (response.data && response.data.list) {\n        setData(response.data.list);\n      } else {\n        console.log(\"Unexpected API response structure.\");\n      }\n    } catch (error) {\n      console.log(\"Error in API call: \", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather App Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formCityName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"City Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          required: true,\n          placeholder: \"Enter your city name\",\n          onChange: e => setCityName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Get Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), data.length > 0 && data.map((eachForecast, index) => /*#__PURE__*/_jsxDEV(WeatherCard, {\n      date: eachForecast.dt_txt,\n      temp: eachForecast.main.temp,\n      min: eachForecast.main.temp_min,\n      max: eachForecast.main.temp_max\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"nb94V0TObsk11vGJ7w6SGMBSWkU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["axios","useState","WeatherCard","Button","Form","jsxDEV","_jsxDEV","Home","_s","cityName","setCityName","data","setData","submitHandler","e","preventDefault","console","log","response","get","list","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","className","controlId","Label","Control","type","required","placeholder","onChange","target","value","length","map","eachForecast","index","date","dt_txt","temp","main","min","temp_min","max","temp_max","_c","$RefreshReg$"],"sources":["C:/Users/SSK/Desktop/boot/myapp/src/comp/home/index.jsx"],"sourcesContent":["import axios from 'axios';\r\nimport { useState } from \"react\";\r\nimport WeatherCard from \"./../weatherCard\";\r\nimport { Button, Form } from 'react-bootstrap';\r\n\r\nlet Home = () => {\r\n\r\n    const [cityName, setCityName] = useState(\"\");\r\n    const [data, setData] = useState([]);\r\n\r\n    let submitHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(\"I am submit handler function\");\r\n\r\n        try {\r\n            let response = await axios.get(`https://pro.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=9030900440d65b7988587a3e425672a9&units=metric`);\r\n\r\n            console.log(\"response: \", response);\r\n\r\n            if (response.data && response.data.list) {\r\n                setData(response.data.list);\r\n            } else {\r\n                console.log(\"Unexpected API response structure.\");\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(\"Error in API call: \", error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Weather App Home</h1>\r\n\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formCityName\">\r\n                    <Form.Label>City Name:</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        required\r\n                        placeholder='Enter your city name'\r\n                        onChange={(e) => setCityName(e.target.value)}\r\n                    />\r\n                </Form.Group>\r\n\r\n                <Button type='submit'>Get Weather</Button>\r\n            </Form>\r\n\r\n            {\r\n                data.length > 0 && data.map((eachForecast, index) => (\r\n                    <WeatherCard\r\n                        key={index}\r\n                        date={eachForecast.dt_txt}\r\n                        temp={eachForecast.main.temp}\r\n                        min={eachForecast.main.temp_min}\r\n                        max={eachForecast.main.temp_max}\r\n                    />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}